# This is a pipeline that weaves a tutorial, then uploads the resultant
# .PDF and other reports as (buildkite, not Julia) artifacts.  The `coppermind`
# configuration memoizes the result, so that identical inputs don't get
# weavd multiple times.

env:
  # Encrypted credentials to allow uploading to our S3 bucket that coppermind caches to
  SECRET_BUILDKITE_S3_ACCESS_KEY_ID: ""
  SECRET_BUILDKITE_S3_SECRET_ACCESS_KEY: ""
  BUILDKITE_S3_DEFAULT_REGION: "us-east-1"

  # Encrypted SSH deploy key that allows us to deploy to TuringTutorials
  SECRET_SSH_DEPLOY_KEY: ""

steps:
  - label: ":hammer: {PATH}"
    key: "tutorial-{SANITIZED_PATH}"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.6
      - staticfloat/coppermind:
          inputs:
            # We are sensitive to the actual tutorial changing
            - {PATH}
            # We are sensitive to the source code of this package changing
            - src/**/*.jl
            # We are sensitive to our overall dependencies changing
            - ./*.toml
          outputs:
            - html/**/*.html
            - markdown/**/*.md
            - notebook/**/*.ipynb
            - pdf/**/*.pdf
            - script/**/*.jl
          s3_prefix: s3://julialang-buildkite-artifacts/turingtutorials
    timeout_in_minutes: 360
    commands: |
      # Instantiate, to install the overall project dependencies
      echo "--- Instantiate"
      julia --project=. -e 'using Pkg; Pkg.instantiate()'

      # Run tutorial
      echo "+++ Run tutorial for {PATH}"
      julia --project=. weave_tutorials.jl "{PATH}"
    agents:
      queue: "juliacpu"
      fastcpu: true

  - label: ":rocket: Publish {PATH}"
    plugins:
      # Use coppermind to download the tutorial results that were calculated in the
      # weaving job above.  Note we still list `outputs` here, since we have the
      # option to extract only a subset of them here.
      - staticfloat/coppermind:
          input_from: "tutorial-{SANITIZED_PATH}"
          outputs:
            - html/**/*.html
            - markdown/**/*.md
            - notebook/**/*.ipynb
            - pdf/**/*.pdf
            - script/**/*.jl
          s3_prefix: s3://julialang-buildkite-artifacts/turingtutorials
      - staticfloat/ssh-agent:
          keyvars:
            - "SSH_DEPLOY_KEY"
    agents:
      queue: "juliacpu"
      fastcpu: true
    commands: .buildkite/publish_tutorials_output.sh
    # Don't run this unless we're on the master branch, and not until the actual weave
    # command has had a chance to run.
    depends_on: "tutorial-{SANITIZED_PATH}"
    branches: "master"
